// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.176.0
//   protoc               v3.5.1
// source: webhook-zns.proto

/* eslint-disable */
import { Metadata } from "@grpc/grpc-js";
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "vn.techres.microservice.grpc.nestjs_webhook_zns";

export interface AuthenticationCodeRequest {
  code: string;
  oa_id: string;
}

export interface TrackingRequest {
  code: string;
  oa_id: string;
}

export interface BaseResponseZns {
  status: number;
  message: string;
  data: Empty | undefined;
}

export interface Empty {
}

export const VN_TECHRES_MICROSERVICE_GRPC_NESTJS_WEBHOOK_ZNS_PACKAGE_NAME =
  "vn.techres.microservice.grpc.nestjs_webhook_zns";

export interface ZnsWebhookServiceClient {
  authenticationCode(request: AuthenticationCodeRequest, metadata?: Metadata): Observable<BaseResponseZns>;

  tracking(request: TrackingRequest, metadata?: Metadata): Observable<BaseResponseZns>;
}

export interface ZnsWebhookServiceController {
  authenticationCode(
    request: AuthenticationCodeRequest,
    metadata?: Metadata,
  ): Promise<BaseResponseZns> | Observable<BaseResponseZns> | BaseResponseZns;

  tracking(
    request: TrackingRequest,
    metadata?: Metadata,
  ): Promise<BaseResponseZns> | Observable<BaseResponseZns> | BaseResponseZns;
}

export function ZnsWebhookServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["authenticationCode", "tracking"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("ZnsWebhookService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("ZnsWebhookService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const ZNS_WEBHOOK_SERVICE_NAME = "ZnsWebhookService";
